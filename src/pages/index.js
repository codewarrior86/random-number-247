import Head from 'next/head';
import styles from '@/styles/Home.module.css';
import Layout from '@/components/Layout';
import { useEffect, useRef, useState } from 'react';

export default function Home() {

  // TAB
  const [tab, setTab] = useState(1);
  const handleTab = (index) => {
    setTab(index);
  }
  const [disabled, setDisabled] = useState(false);
  const [disabled2, setDisabled2] = useState(false);
  const [disabled3, setDisabled3] = useState(false);

  const [valueInput, setValueInput] = useState();
  const inputRef = useRef();

  const randomNumber = () => {
    const max = 1000000;
    const min = -1000000;
    let round = Math.floor(Math.random() * (max - min)) + min;
    if (round == 0) return getNonZeroRandomNumber();
    return round;
  }

  // TAB 2
  const [arrayRandom, setArrayRandom] = useState();
  const handleArrayRandom = () => {
    if (valueInput) {
      // const array = Array(valueInput) // array size 
      //   .fill()
      //   .map(() => randomNumber())

      const array = Array.from({ length: valueInput }, () => randomNumber());
      setArrayRandom(array);
      console.log(array);
    } else {
      alert("Please fill form input in tab 1 first!");
    }
  }


  // check integer
  const [integerNums, setIntegerNums] = useState();
  const checkInteger = () => {
    let integer = arrayRandom.filter(num => num > 1);
    setIntegerNums(integer);
    console.log(integer);
  }


  // TAB 3
  const [result, setResult] = useState();
  const showResult = () => {
    if (integerNums) {
      let result = Math.min(...integerNums) - 1;
      console.log(result);
      setResult(result);
    } else {
      alert("Please fill form input in tab 1 first!")
    }
  }



  useEffect(() => {
    if (arrayRandom) {
      checkInteger();
    }
  }, [arrayRandom])



  const handleSubmit = (event) => {
    event.preventDefault();

    if (inputRef.current.value) {
      setValueInput(inputRef.current.value);
      // alert("submit = " + inputRef.current.value);
      handleTab(2);
      setDisabled(true);
    }

  }

  const handleInput = (event) => {
    let target = event.target.value.replace(/\D/g, '')
    setValueInput(target)
  }


  return (
    <>
      <Head>
        <title>Random Number - 247</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <div className='container'>
          <section>
            <ul>
              <li>
                <button type="button" className="btn btn-primary" disabled={disabled} onClick={() => handleTab(1)}>1</button>
              </li>
              <li>
                <button type="button" className="btn btn-primary" disabled={disabled2} onClick={() => handleTab(2)}>2</button>
              </li>
              <li>
                <button type="button" className="btn btn-primary" disabled={disabled3} onClick={() => handleTab(3)}>3</button>
              </li>
            </ul>

            {/* content */}
            <div>
              {
                tab === 1 &&
                <div className="contentTab">
                  <form onSubmit={handleSubmit}>
                    <div className='d-flex align-items-center gap-3'>
                      <input
                        ref={inputRef}
                        // type="tel"
                        className='input'
                        value={valueInput}
                        onChange={handleInput}
                        placeholder="1 - 100000"
                      />
                      <button type='submit' className="btn btn-primary">Submit</button>
                    </div>
                  </form>
                  {/* <button type="button" className="btn btn-primary" disabled={false} onClick={() => { setValueInput(inputRef.current.value) }}>Submit</button> */}
                </div>
              }
              {
                tab === 2 &&
                <div className="contentTab">
                  <button className="btn btn-primary mb-4" onClick={handleArrayRandom}>Set Random Number</button>
                  <table>
                    <thead>
                      <tr>
                        <th>No</th>
                        <th>Angka</th>
                      </tr>
                    </thead>
                    <tbody>
                      {
                        arrayRandom?.map((data, index) =>
                          <tr>
                            <td>{index + 1}</td>
                            <td>{data}</td>
                          </tr>
                        )
                      }

                    </tbody>
                  </table>
                </div>
              }
              {
                tab === 3 &&
                <div className="contentTab">
                  <button className="btn btn-primary mb-3" onClick={showResult}>Show Result</button>
                  <div>{result}</div>
                </div>
              }
            </div>

          </section>
        </div>
      </Layout >
    </>
  )
}
